[{"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js":"1","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js":"2","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js":"4","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js":"5","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js":"7","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js":"8","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js":"9","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js":"10","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js":"11","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js":"12","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js":"13","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js":"14","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js":"15","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js":"16","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js":"17","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js":"18","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js":"19","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js":"20","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js":"21","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js":"22","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js":"23","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js":"24","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js":"25","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js":"26","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js":"27","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js":"28","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js":"29","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js":"30","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js":"31","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js":"32","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js":"33","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js":"34","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js":"35","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js":"36","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js":"37","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js":"38","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js":"39","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js":"40","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js":"41","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComments\\index.js":"42","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostLikes\\index.js":"43","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\DeleteDialog\\index.js":"44","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\AboutTheAuthor\\index.js":"45","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditPost\\index.js":"46","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingForm\\index.js":"47","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js":"48","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingComponent\\index.js":"49","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EmptyComponent\\index.js":"50"},{"size":500,"mtime":1608862841737,"results":"51","hashOfConfig":"52"},{"size":857,"mtime":1610253670019,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1607648565038,"results":"54","hashOfConfig":"52"},{"size":4237,"mtime":1617974963618,"results":"55","hashOfConfig":"52"},{"size":1773,"mtime":1617966332016,"results":"56","hashOfConfig":"52"},{"size":1233,"mtime":1611846198575,"results":"57","hashOfConfig":"52"},{"size":458,"mtime":1610940998336,"results":"58","hashOfConfig":"52"},{"size":2950,"mtime":1617959827484,"results":"59","hashOfConfig":"52"},{"size":237,"mtime":1611125716607,"results":"60","hashOfConfig":"52"},{"size":4216,"mtime":1617959884827,"results":"61","hashOfConfig":"52"},{"size":367,"mtime":1610946418764,"results":"62","hashOfConfig":"52"},{"size":399,"mtime":1609226384912,"results":"63","hashOfConfig":"52"},{"size":363,"mtime":1610940073581,"results":"64","hashOfConfig":"52"},{"size":604,"mtime":1610940248964,"results":"65","hashOfConfig":"52"},{"size":1388,"mtime":1617957895975,"results":"66","hashOfConfig":"52"},{"size":303,"mtime":1617957671135,"results":"67","hashOfConfig":"52"},{"size":2611,"mtime":1618058373077,"results":"68","hashOfConfig":"52"},{"size":253,"mtime":1609482015721,"results":"69","hashOfConfig":"52"},{"size":790,"mtime":1617967018776,"results":"70","hashOfConfig":"52"},{"size":1535,"mtime":1618137786175,"results":"71","hashOfConfig":"52"},{"size":3077,"mtime":1611989894410,"results":"72","hashOfConfig":"52"},{"size":417,"mtime":1618147249771,"results":"73","hashOfConfig":"52"},{"size":1589,"mtime":1618059427257,"results":"74","hashOfConfig":"52"},{"size":516,"mtime":1618058725448,"results":"75","hashOfConfig":"52"},{"size":4165,"mtime":1618059640621,"results":"76","hashOfConfig":"52"},{"size":1246,"mtime":1618137839622,"results":"77","hashOfConfig":"52"},{"size":2451,"mtime":1618146849602,"results":"78","hashOfConfig":"52"},{"size":8825,"mtime":1611982740419,"results":"79","hashOfConfig":"52"},{"size":2922,"mtime":1618060174348,"results":"80","hashOfConfig":"52"},{"size":7418,"mtime":1618060224658,"results":"81","hashOfConfig":"52"},{"size":3894,"mtime":1611980032113,"results":"82","hashOfConfig":"52"},{"size":3565,"mtime":1611980011271,"results":"83","hashOfConfig":"52"},{"size":1638,"mtime":1611143006225,"results":"84","hashOfConfig":"52"},{"size":439,"mtime":1611142984600,"results":"85","hashOfConfig":"52"},{"size":5823,"mtime":1611990340979,"results":"86","hashOfConfig":"52"},{"size":3748,"mtime":1618146815626,"results":"87","hashOfConfig":"52"},{"size":365,"mtime":1610940337592,"results":"88","hashOfConfig":"52"},{"size":133,"mtime":1610940343998,"results":"89","hashOfConfig":"52"},{"size":809,"mtime":1610940764527,"results":"90","hashOfConfig":"52"},{"size":3570,"mtime":1618138165449,"results":"91","hashOfConfig":"52"},{"size":1696,"mtime":1611117499291,"results":"92","hashOfConfig":"52"},{"size":9011,"mtime":1618148017435,"results":"93","hashOfConfig":"52"},{"size":2591,"mtime":1611124885119,"results":"94","hashOfConfig":"52"},{"size":612,"mtime":1611501039964,"results":"95","hashOfConfig":"52"},{"size":2121,"mtime":1611980241815,"results":"96","hashOfConfig":"52"},{"size":3779,"mtime":1611980505187,"results":"97","hashOfConfig":"52"},{"size":462,"mtime":1618146541333,"results":"98","hashOfConfig":"52"},{"size":797,"mtime":1617967206997,"results":"99","hashOfConfig":"52"},{"size":537,"mtime":1618147123963,"results":"100","hashOfConfig":"52"},{"size":308,"mtime":1618147897660,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1cjo7jk",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\index.js",[],["221","222"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\App.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Home\\index.js",["223"],"import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Home = (props) => {\r\n  const { history } = props;\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Home'));\r\n  }, []);\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <div className='hero-bg'>\r\n      <div className='hero-content'>\r\n        <h1 className='display-2 text-center'>Welcome Home</h1>\r\n        <p className='lead text-center'>\r\n          DEVLY's purpose is to consectetur adipiscing elit, sed do eiusmod\r\n          tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n          veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n          ea commodo consequat.\r\n        </p>\r\n        <div className='hero-btn-group mt-5'>\r\n          <Button size='lg' variant='outline-light' href='/sign-in'>\r\n            Get Started\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Developers\\index.js",["224"],"import React, { useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst Developers = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Developers'));\r\n  }, []);\r\n\r\n  return (\r\n    <Main>\r\n      <h1>Developers Page</h1>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Developers;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignIn\\index.js",["225"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport useForm from '../../customHooks/useForm';\r\nimport AlertDismissable from '../../components/Alert';\r\nimport LoadingForm from '../../components/LoadingForm';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signInUser } from '../../actions/authAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst SignIn = (props) => {\r\n  const { history } = props;\r\n\r\n  const [values, handleChange] = useForm({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = values;\r\n\r\n  const { isAuthenticated, loadingForm } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Sign In'));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(signInUser(values));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <Row>\r\n        <Col xs={6} md={3} />\r\n        <Col xs={6} md={6}>\r\n          <h1 className='text-center mb-5'>Sign In</h1>\r\n          <AlertDismissable />\r\n          <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicCheckbox'>\r\n              <Form.Check type='checkbox' label='Check me out' />\r\n            </Form.Group>\r\n            <Button\r\n              size='lg'\r\n              variant='primary'\r\n              type='submit'\r\n              className='btn-block'\r\n              disabled={loadingForm}\r\n            >\r\n              <LoadingForm\r\n                loadingForm={loadingForm}\r\n                btnText='Sign In'\r\n                loadingText='Signing in, please wait...'\r\n              />\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          <p className='text-center'>Don't have an account yet?</p>\r\n          <Button\r\n            size='lg'\r\n            href='/sign-up'\r\n            variant='outline-primary'\r\n            type='submit'\r\n            className='btn-block mt-3'\r\n          >\r\n            Create an Account\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} md={3} />\r\n      </Row>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Main\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\SignUp\\index.js",["226"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Main from '../../components/Main';\r\nimport useForm from '../../customHooks/useForm';\r\nimport AlertDismissable from '../../components/Alert';\r\nimport LoadingForm from '../../components/LoadingForm';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { alertSet } from '../../actions/uiStateAction';\r\nimport { signUpUser } from '../../actions/authAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst SignUp = (props) => {\r\n  const { history } = props;\r\n\r\n  const [values, handleChange] = useForm({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const { firstname, lastname, email, password, confirmPassword } = values;\r\n\r\n  const { isAuthenticated, loadingForm } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Sign Up'));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      dispatch(\r\n        alertSet({\r\n          alertType: 'danger',\r\n          alertMsg: 'Passwords do not match.',\r\n        })\r\n      );\r\n    } else {\r\n      const userData = { firstname, lastname, email, password };\r\n      dispatch(signUpUser(userData));\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    history.push('/dashboard');\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <Row>\r\n        <Col sm={0} md={3} />\r\n        <Col sm={12} md={6}>\r\n          <h1 className='text-center mb-5'>Create an Account</h1>\r\n          <AlertDismissable />\r\n          <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group>\r\n              <Form.Label>Firstname</Form.Label>\r\n              <Form.Control\r\n                name='firstname'\r\n                type='text'\r\n                value={firstname}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Lastname</Form.Label>\r\n              <Form.Control\r\n                name='lastname'\r\n                type='text'\r\n                value={lastname}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                name='email'\r\n                type='email'\r\n                value={email}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name='password'\r\n                type='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                name='confirmPassword'\r\n                type='password'\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              size='lg'\r\n              variant='primary'\r\n              type='submit'\r\n              className='btn-block'\r\n              disabled={loadingForm}\r\n            >\r\n              <LoadingForm\r\n                loadingForm={loadingForm}\r\n                btnText='Sign Up'\r\n                loadingText='Signing up, please wait...'\r\n              />\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          <p className='text-center'>Already have an account?</p>\r\n          <Button\r\n            size='lg'\r\n            href='/sign-in'\r\n            variant='outline-primary'\r\n            type='submit'\r\n            className='btn-block mt-3'\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Col>\r\n        <Col sm={0} md={3} />\r\n      </Row>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\customHooks\\useForm.js",["227"],"import e from 'cors';\r\nimport { useState } from 'react';\r\n\r\n// handle form fields dynamically\r\nconst useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  return [\r\n    values,\r\n    (e) => {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\store.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Alert\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\authReducer.js",["228"],"import {\r\n  AUTH_BEGIN,\r\n  AUTH_END,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  USER_LOADED,\r\n  AUTH_FORM_BEGIN,\r\n  AUTH_FORM_END,\r\n} from '../constants/authConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loadingForm: false,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  userDetails: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case AUTH_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case AUTH_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case AUTH_FORM_BEGIN:\r\n      return {\r\n        ...state,\r\n        loadingForm: true,\r\n      };\r\n    case AUTH_FORM_END:\r\n      return {\r\n        ...state,\r\n        loadingForm: false,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userData,\r\n      };\r\n    case AUTH_SUCCESS:\r\n      localStorage.setItem('token', payload.userToken);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        userDetails: payload.userDetails,\r\n      };\r\n    case AUTH_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\authConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\authAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\util\\setAuthToken.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Dashboard\\index.js",["229"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\CreatePost\\index.js",["230","231"],"import React, { useState, useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport AlertDismissable from '../../components/Alert';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePost } from '../../actions/postAction';\r\nimport { getCurrentPage } from '../../actions/uiStateAction';\r\n\r\nconst CreatePost = (props) => {\r\n  const { history } = props;\r\n  const [title, handleTitle] = useState('');\r\n  const [content, handleContent] = useState((content, editor) => content);\r\n\r\n  const { loading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentPage('Create Post'));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const thumbnail = document\r\n      .querySelector('#preview img')\r\n      .getAttribute('src');\r\n    const postData = {\r\n      title,\r\n      content,\r\n      thumbnail,\r\n    };\r\n\r\n    dispatch(savePost(postData, history));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      <AlertDismissable />\r\n      <h1>Write a Post</h1>\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Button\r\n          size='lg'\r\n          type='submit'\r\n          className='float-right publish-post-btn'\r\n        >\r\n          Publish Post\r\n        </Button>\r\n        <Form.Group className='mt-5'>\r\n          <Form.Control\r\n            className='post-title-textarea'\r\n            name='title'\r\n            as='textarea'\r\n            placeholder='Title'\r\n            value={title}\r\n            onChange={(e) => handleTitle(e.target.value)}\r\n            required={true}\r\n          />\r\n        </Form.Group>\r\n        <Editor\r\n          apiKey='d01fggzhnl8ykqa0mv3t83mdkkw8f4j5aj305lr5it0pvjck'\r\n          initialValue={content}\r\n          init={{\r\n            placeholder: 'What do you have in mind?',\r\n            selector: 'textarea',\r\n            resize: false,\r\n            height: 500,\r\n            menubar: false,\r\n            toolbar_mode: 'floating',\r\n            toolbar_location: 'bottom',\r\n            skin: 'outside',\r\n            plugins: [\r\n              'advlist autolink lists link image charmap print preview anchor',\r\n              'searchreplace visualblocks code fullscreen',\r\n              'insertdatetime media table paste code help wordcount',\r\n            ],\r\n            toolbar:\r\n              'undo redo | formatselect | bold italic backcolor | link image | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n          }}\r\n          onEditorChange={(e) => handleContent(e)}\r\n        />\r\n      </Form>\r\n      <div\r\n        style={{ display: 'none' }}\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{ __html: content }}\r\n      />\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingScreen\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\profileReducer.js",["232"],"import {\r\n  PROFILE_BEGIN,\r\n  PROFILE_END,\r\n  PROFILE_FORM_BEGIN,\r\n  PROFILE_FORM_END,\r\n  PROFILE_DETAILS_SUCCESS,\r\n  PROFILES_SUCCESS,\r\n  REPOS_SUCCESS,\r\n  PROFILE_DETAILS_FAIL,\r\n  PROFILES_FAIL,\r\n  REPOS_FAIL,\r\n} from '../constants/profileConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loadingForm: false,\r\n  profileDetails: null,\r\n  profiles: null,\r\n  repos: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PROFILE_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case PROFILE_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case PROFILE_FORM_BEGIN:\r\n      return {\r\n        ...state,\r\n        loadingForm: true,\r\n      };\r\n    case PROFILE_FORM_END:\r\n      return {\r\n        ...state,\r\n        loadingForm: false,\r\n      };\r\n    case PROFILE_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profileDetails: payload.profileDetails,\r\n      };\r\n    case PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profiles: payload.profiles,\r\n      };\r\n    case REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        repos: payload.repos,\r\n      };\r\n    case REPOS_FAIL:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n      };\r\n    case PROFILE_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        profileDetails: null,\r\n      };\r\n    case PROFILES_FAIL:\r\n      return {\r\n        ...state,\r\n        profiles: null,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\profileConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\profileAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\Profile\\index.js",["233"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileHeader\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\ProfileDetails\\index.js",["234"],"import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardGroup,\r\n  Container,\r\n  ListGroup,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileDetails = (props) => {\r\n  const [key, setKey] = useState('#experience');\r\n\r\n  const { profileDetails, userDetails } = props;\r\n  const { experience, education, social } = profileDetails;\r\n\r\n  return (\r\n    <Container className='mt-2 mb-5'>\r\n      <Nav\r\n        className='justify-content-center profile-details-nav'\r\n        activeKey={key}\r\n        onSelect={(key) => setKey(key)}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#experience' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#experience'\r\n          >\r\n            Work Experience\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#education' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#education'\r\n          >\r\n            Education\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className={\r\n              key === '#socials' ? 'nav-active text-primary' : 'text-muted'\r\n            }\r\n            eventKey='#socials'\r\n          >\r\n            Socials and Contact Infos\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <div className='mt-5'>\r\n        {key === '#experience' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Experience'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#experience'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Work Experience</h1>\r\n            <ListGroup className='mt-5'>\r\n              {experience.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <div className='float-right'>\r\n                        <h5 className='text-right'>\r\n                          <Badge pill variant='primary' style={{ padding: 12 }}>\r\n                            {item.type}\r\n                          </Badge>\r\n                        </h5>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <h3 className='mt-2'>{item.title}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-building fa-fw' /> {item.company}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-map-marker fa-fw' />{' '}\r\n                          {item.location}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#education' && (\r\n          <React.Fragment>\r\n            <Button\r\n              title='Add Education'\r\n              className='float-right'\r\n              variant='outline-primary'\r\n              href='/edit-profile#education'\r\n            >\r\n              <i className='fa fa-plus fa-fw' />\r\n            </Button>\r\n            <h1>Education</h1>\r\n            <ListGroup className='mt-5'>\r\n              {education.map((item) => {\r\n                return (\r\n                  <Card key={item.id} className='mb-2'>\r\n                    <Card.Body>\r\n                      <h3 className='mt-2'>{item.fieldofstudy}</h3>\r\n                      <div className='profile-details-subdetails'>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-school fa-fw' /> {item.school}\r\n                        </p>\r\n                        <p className='text-inline text-muted'>\r\n                          <i className='fa fa-graduation-cap fa-fw' />{' '}\r\n                          {item.degree}\r\n                        </p>\r\n                        <p className='text-muted'>\r\n                          <i className='fa fa-calendar fa-fw' />{' '}\r\n                          <Moment format='MM/DD/YY'>{item.from}</Moment> -{' '}\r\n                          {item.current && 'Current'}\r\n                          {item.to && (\r\n                            <Moment format='MM/DD/YY'>{item.to}</Moment>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <p className='mt-2'>{item.description}</p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n        {key === '#socials' && (\r\n          <React.Fragment>\r\n            <h1>Socials and Contact Infos</h1>\r\n            <ListGroup className='mt-5'>\r\n              {userDetails.email && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='float-right mt-1'\r\n                    href={`mailto:${userDetails.email}`}\r\n                  >\r\n                    <i className='fa fa-external-link-alt fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fa fa-envelope-square fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{userDetails.email}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.facebook && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right mt-1' href={social.facebook}>\r\n                    <i className='fa fa-external-link-alt fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fab fa-facebook fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.facebook}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.linkedin && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right mt-1' href={social.linkedin}>\r\n                    <i className='fa fa-external-link-alt fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fab fa-linkedin fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.linkedin}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.twitter && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right mt-1' href={social.twitter}>\r\n                    <i className='fa fa-external-link-alt fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fab fa-twitter fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.twitter}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n              {social.youtube && (\r\n                <ListGroup.Item>\r\n                  <Button className='float-right mt-1' href={social.youtube}>\r\n                    <i className='fa fa-external-link-alt fa-fw' />\r\n                  </Button>\r\n                  <div className='profile-details-socials mt-2'>\r\n                    <p className='text-inline mr-4'>\r\n                      <i className='fab fa-youtube fa-fw fa-2x' />\r\n                    </p>\r\n                    <p className='text-inline'>{social.youtube}</p>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditProfile\\index.js",["235"],"import React, { useState, useEffect } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Nav } from 'react-bootstrap';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileAction';\r\nimport EditProfileDetails from '../../components/EditProfileDetails';\r\nimport NewExperience from '../../components/NewExperience';\r\nimport NewEducation from '../../components/NewEducation';\r\n\r\nconst EditProfile = (props) => {\r\n  const { history } = props;\r\n  const { hash } = history.location;\r\n\r\n  const [key, setKey] = useState(hash);\r\n\r\n  const { profileDetails, loading, loadingForm } = useSelector(\r\n    (state) => state.profile\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentProfile());\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <LoadingScreen loadingMsg='Loading page, please wait...' />;\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <React.Fragment>\r\n        <h1>\r\n          {profileDetails && (\r\n            <Button\r\n              className='mr-3'\r\n              style={{ marginTop: -6 }}\r\n              href='profile'\r\n              variant='outline-primary'\r\n            >\r\n              <i className='fa fa-chevron-left fa-fw' /> Back\r\n            </Button>\r\n          )}\r\n          Edit Profile\r\n        </h1>\r\n        <Nav\r\n          className='profile-details-nav mt-5'\r\n          activeKey={key}\r\n          onSelect={(key) => setKey(key)}\r\n        >\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              className={\r\n                key === '#profile-details'\r\n                  ? 'nav-active text-primary'\r\n                  : 'text-muted'\r\n              }\r\n              eventKey='#profile-details'\r\n            >\r\n              Profile Details\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              className={\r\n                key === '#experience' ? 'nav-active text-primary' : 'text-muted'\r\n              }\r\n              eventKey='#experience'\r\n            >\r\n              Experience\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              className={\r\n                key === '#education' ? 'nav-active text-primary' : 'text-muted'\r\n              }\r\n              eventKey='#education'\r\n            >\r\n              Education\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {key === '#profile-details' && (\r\n          <EditProfileDetails\r\n            profileDetails={profileDetails}\r\n            loadingForm={loadingForm}\r\n          />\r\n        )}\r\n        {key === '#experience' && <NewExperience loadingForm={loadingForm} />}\r\n        {key === '#education' && <NewEducation loadingForm={loadingForm} />}\r\n      </React.Fragment>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EditProfileDetails\\index.js",["236"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\nimport LoadingForm from '../LoadingForm';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProfile } from '../../actions/profileAction';\r\nimport AlertDismissable from '../Alert';\r\n\r\nconst EditProfileDetails = (props) => {\r\n  const { profileDetails, loadingForm } = props;\r\n  const [values, setValues] = useState({\r\n    company: '',\r\n    bio: '',\r\n    status: '',\r\n    website: '',\r\n    mobilenumber: '',\r\n    phonenumber: '',\r\n    location: '',\r\n    skills: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    twitter: '',\r\n    youtube: '',\r\n    githubusername: '',\r\n  });\r\n\r\n  const {\r\n    company,\r\n    bio,\r\n    status,\r\n    website,\r\n    mobilenumber,\r\n    phonenumber,\r\n    location,\r\n    skills,\r\n    facebook,\r\n    linkedin,\r\n    twitter,\r\n    youtube,\r\n    githubusername,\r\n  } = values;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      company: !profileDetails ? '' : profileDetails.company,\r\n      bio: !profileDetails ? '' : profileDetails.bio,\r\n      status: !profileDetails ? '' : profileDetails.status,\r\n      website: !profileDetails ? '' : profileDetails.website,\r\n      mobilenumber: !profileDetails ? '' : profileDetails.mobilenumber,\r\n      phonenumber: !profileDetails ? '' : profileDetails.phonenumber,\r\n      location: !profileDetails ? '' : profileDetails.location,\r\n      skills: !profileDetails ? '' : profileDetails.skills.join(', '),\r\n      facebook: !profileDetails ? '' : profileDetails.social.facebook,\r\n      linkedin: !profileDetails ? '' : profileDetails.social.linkedin,\r\n      twitter: !profileDetails ? '' : profileDetails.social.twitter,\r\n      youtube: !profileDetails ? '' : profileDetails.social.youtube,\r\n      githubusername: !profileDetails ? '' : profileDetails.githubusername,\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile(values));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className='mb-3 mt-5'>Edit Main Details</h3>\r\n      <AlertDismissable />\r\n      <Form className='mb-4' onSubmit={(e) => handleSubmit(e)}>\r\n        <Form.Group>\r\n          <Form.Label>Company</Form.Label>\r\n          <Form.Control\r\n            name='company'\r\n            type='text'\r\n            value={company}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Bio</Form.Label>\r\n          <Form.Control\r\n            name='bio'\r\n            as='textarea'\r\n            value={bio}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Status</Form.Label>\r\n          <Form.Control\r\n            name='status'\r\n            type='text'\r\n            value={status}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Website</Form.Label>\r\n          <Form.Control\r\n            name='website'\r\n            type='text'\r\n            value={website}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Mobile Number</Form.Label>\r\n          <Form.Control\r\n            name='mobilenumber'\r\n            type='text'\r\n            value={mobilenumber}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Telephone Number</Form.Label>\r\n          <Form.Control\r\n            name='phonenumber'\r\n            type='text'\r\n            value={phonenumber}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            name='location'\r\n            type='text'\r\n            value={location}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Skills (separate with comma)</Form.Label>\r\n          <Form.Control\r\n            name='skills'\r\n            type='text'\r\n            value={skills}\r\n            onChange={handleChange}\r\n            required={true}\r\n          />\r\n        </Form.Group>\r\n        <h3 className='mt-3 mb-4'>Socials</h3>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text className='input-group-label'>\r\n                https://github.com/\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Github username'\r\n              name='githubusername'\r\n              type='text'\r\n              value={githubusername}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fab fa-facebook fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Facebook account url'\r\n              name='facebook'\r\n              type='text'\r\n              value={facebook}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fab fa-linkedin fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter LinkedIn account url'\r\n              name='linkedin'\r\n              type='text'\r\n              value={linkedin}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fab fa-twitter fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Twitter account url'\r\n              name='twitter'\r\n              type='text'\r\n              value={twitter}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <i className='fab fa-youtube fa-fw' />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              placeholder='Enter Youtube account url'\r\n              name='youtube'\r\n              type='text'\r\n              value={youtube}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n        <Button\r\n          size='lg'\r\n          variant='primary'\r\n          type='submit'\r\n          disabled={loadingForm}\r\n        >\r\n          <LoadingForm\r\n            loadingForm={loadingForm}\r\n            btnText='Save Changes'\r\n            loadingText='Updating profile, please wait...'\r\n          />\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditProfileDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewExperience\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\NewEducation\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\postReducer.js",["237"],"import {\r\n  POST_BEGIN,\r\n  POST_END,\r\n  COMMENT_BEGIN,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POSTS_SUCCESS,\r\n  POSTS_FAIL,\r\n  UPDATE_LIKE_SUCCESS,\r\n  COMMENT_SUCCESS,\r\n} from '../constants/postConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  commentLoading: false,\r\n  postDetails: null,\r\n  posts: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case POST_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case POST_END:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case COMMENT_BEGIN:\r\n      return {\r\n        ...state,\r\n        commentLoading: true,\r\n      };\r\n    case POST_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: payload.postDetails,\r\n      };\r\n    case POST_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        postDetails: null,\r\n      };\r\n    case POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.posts,\r\n      };\r\n    case POSTS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: [],\r\n      };\r\n    case UPDATE_LIKE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        postDetails: { ...state.postDetails, likes: payload.postLikes },\r\n      };\r\n    case COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        commentLoading: false,\r\n        postDetails: { ...state.postDetails, comments: payload.postComments },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\postConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\postAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\Posts\\index.js",["238"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\actions\\uiStateAction.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\constants\\uiStateConstants.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\reducers\\uiStateReducer.js",["239"],"import {\r\n  ALERT_SET,\r\n  ALERT_HIDE,\r\n  GET_CURRENT_PAGE,\r\n} from '../constants/uiStateConstants';\r\n\r\nconst initialState = {\r\n  alertType: null,\r\n  alertMsg: '',\r\n  alertShow: false,\r\n  currentPage: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ALERT_SET:\r\n      return {\r\n        ...state,\r\n        alertType: payload.alertType,\r\n        alertMsg: payload.alertMsg,\r\n        alertShow: true,\r\n      };\r\n    case ALERT_HIDE:\r\n      return {\r\n        ...state,\r\n        alertType: null,\r\n        alertMsg: '',\r\n        alertShow: false,\r\n      };\r\n    case GET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\PostDetails\\index.js",["240"],"import React, { useEffect, useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport { Button, NavDropdown, Image } from 'react-bootstrap';\r\nimport TimeAgo from 'react-timeago';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostDetails, deletePost } from '../../actions/postAction';\r\nimport PostDetailsFooter from '../../components/PostDetailsFooter';\r\nimport AboutTheAuthor from '../../components/AboutTheAuthor';\r\nimport DeleteDialog from '../../components/DeleteDialog';\r\n\r\nconst PostDetails = (props) => {\r\n  const { history, match } = props;\r\n\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const { postDetails, loading } = useSelector((state) => state.post);\r\n  const { userDetails } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetails(match.params.id));\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(match.params.id, history));\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingScreen loadingMsg='Loading page, please wait...' />;\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      {postDetails && userDetails && (\r\n        <React.Fragment>\r\n          {postDetails.user._id === userDetails._id && (\r\n            <React.Fragment>\r\n              <DeleteDialog\r\n                showDelete={showDelete}\r\n                setShowDelete={setShowDelete}\r\n                deleteMsg={'Are you sure you want to delete this post?'}\r\n                handleDelete={handleDelete}\r\n              />\r\n              <NavDropdown\r\n                alignRight\r\n                id='post-more-dropdown'\r\n                title={\r\n                  <Button\r\n                    variant='link'\r\n                    className='text-muted mt-2'\r\n                    style={{ fontSize: 16 }}\r\n                  >\r\n                    <i className='fa fa-ellipsis-v fa-fw' />\r\n                  </Button>\r\n                }\r\n              >\r\n                <NavDropdown.Item href={`/edit-post/${match.params.id}`}>\r\n                  Edit\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => setShowDelete(!showDelete)}>\r\n                  Delete\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </React.Fragment>\r\n          )}\r\n          <React.Fragment>\r\n            <h1>{postDetails.title}</h1>\r\n            <div className='post-user mt-2 mb-5'>\r\n              <Image src={postDetails.user.avatar} roundedCircle />\r\n              <p className='text-muted ml-2'>\r\n                {postDetails.user.firstname} {postDetails.user.lastname}\r\n                <span className='ml-2 mr-2'>&bull;</span>\r\n                <TimeAgo date={postDetails.date} />\r\n                {postDetails.user._id !== userDetails._id && (\r\n                  <React.Fragment>\r\n                    <span className='ml-2 mr-2'>&bull;</span>\r\n                    <Button>Follow</Button>\r\n                  </React.Fragment>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div\r\n              className='post-content'\r\n              dangerouslySetInnerHTML={{ __html: postDetails.content }}\r\n            />\r\n          </React.Fragment>\r\n          <PostDetailsFooter\r\n            postDetails={postDetails}\r\n            userDetails={userDetails}\r\n          />\r\n          <hr />\r\n          <AboutTheAuthor user={postDetails.user} />\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostDetailsFooter\\index.js",["241","242","243"],"import React, { useEffect, useState } from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../actions/postAction';\r\nimport PostComments from '../PostComments';\r\nimport PostLikes from '../PostLikes';\r\n\r\nconst PostDetailsFooter = (props) => {\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const { postDetails, userDetails } = props;\r\n  const { _id, likes, comments } = postDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasLiked = likes.find((item) => item.user === userDetails._id)\r\n      ? true\r\n      : false;\r\n    setLiked(hasLiked);\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      dispatch(unlikePost(_id));\r\n    } else {\r\n      dispatch(likePost(_id));\r\n    }\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PostLikes likes={likes} postId={_id} userDetails={userDetails} />\r\n      {/* Post Comment */}\r\n      <PostComments\r\n        postId={_id}\r\n        comments={comments}\r\n        userDetails={userDetails}\r\n      />\r\n      <ButtonGroup vertical className='post-footer-btn-group ml-3 mr-3 mt-5'>\r\n        <Button variant='link'>\r\n          {' '}\r\n          <i className='far fa-bookmark fa-fw fa-2x' />{' '}\r\n        </Button>\r\n        <Button variant='link'>\r\n          {/* {likes.length !== 0 && (\r\n                <span>\r\n                  {likes.length}{' '}\r\n                  {likes.length !== 1 ? 'Likes' : 'Like'}\r\n                </span>\r\n              )} */}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetailsFooter;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostComments\\index.js",["244"],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\PostLikes\\index.js",["245"],"import React, { useState, useEffect } from 'react';\r\nimport { ButtonGroup, Button, Modal, Image } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../actions/postAction';\r\n\r\nconst PostLikes = (props) => {\r\n  const { postId, likes, userDetails } = props;\r\n  const [liked, setLiked] = useState(false);\r\n  const [showLikes, setShowLikes] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const hasLiked = likes.find((item) => item.user._id === userDetails._id)\r\n      ? true\r\n      : false;\r\n    setLiked(hasLiked);\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (liked) {\r\n      dispatch(unlikePost(postId));\r\n    } else {\r\n      dispatch(likePost(postId));\r\n    }\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup vertical className='post-footer-btn-group mr-3 mt-5'>\r\n        <Button variant='link' onClick={() => handleLike()}>\r\n          {' '}\r\n          <i\r\n            className={\r\n              liked ? 'fa fa-heart fa-fw fa-2x' : 'far fa-heart fa-fw fa-2x'\r\n            }\r\n          />{' '}\r\n        </Button>\r\n        <Button variant='link' onClick={() => setShowLikes(!showLikes)}>\r\n          {likes.length !== 0 && (\r\n            <span>\r\n              {likes.length} {likes.length !== 1 ? 'Likes' : 'Like'}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Modal show={showLikes} onHide={() => setShowLikes(!showLikes)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Likes ({likes.length})</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {likes.length !== 0 ? (\r\n            <React.Fragment>\r\n              {likes.map((like) => {\r\n                const { firstname, lastname, avatar, _id } = like.user;\r\n                return (\r\n                  <React.Fragment key={_id}>\r\n                    <div className='post-user mt-2 mb-3'>\r\n                      <Image src={avatar} roundedCircle />\r\n                      <p className='text-primary ml-2'>\r\n                        <strong>\r\n                          {firstname} {lastname}\r\n                        </strong>\r\n                      </p>\r\n                    </div>\r\n                    <hr />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          ) : (\r\n            <p className='text-center lead mt-5'>No likes for now.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostLikes;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\DeleteDialog\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\AboutTheAuthor\\index.js",["246"],"import React, { useEffect } from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileByUserId } from '../../actions/profileAction';\r\n\r\nconst AboutTheAuthor = (props) => {\r\n  const { user } = props;\r\n  const { _id, firstname, lastname, avatar } = user;\r\n\r\n  const { profileDetails } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileByUserId(_id));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className='mt-4 mb-5 text-center'>About the Author</h3>\r\n      {profileDetails && (\r\n        <Row>\r\n          <Col xs={3} md={3}>\r\n            <p className='text-center'>\r\n              <Image src={avatar} roundedCircle thumbnail />\r\n            </p>\r\n          </Col>\r\n          <Col xs={9} md={9}>\r\n            <h3 className='mt-2'>\r\n              {firstname} {lastname}\r\n            </h3>\r\n            <div className='post-profile-subdetails'>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-map-marker fa-fw text-danger' />{' '}\r\n                {profileDetails.location}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-building fa-fw' /> {profileDetails.company}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-globe fa-fw text-warning' />{' '}\r\n                {profileDetails.website}\r\n              </p>\r\n              <p className='text-inline'>\r\n                <i className='fa fa-quote-left fa-fw text-muted' /> Feeling{' '}\r\n                {profileDetails.status}\r\n              </p>\r\n            </div>\r\n            <div className='mb-3'>\r\n              <p>{profileDetails.bio}</p>\r\n            </div>\r\n            <Button variant='primary' className='mr-2'>\r\n              Follow\r\n            </Button>\r\n            <Button variant='outline-primary'>View Profile</Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AboutTheAuthor;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\pages\\EditPost\\index.js",["247","248","249"],"import React, { useEffect, useState } from 'react';\r\nimport Main from '../../components/Main';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport LoadingScreen from '../../components/LoadingScreen';\r\nimport AlertDismissable from '../../components/Alert';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPostDetails, updatePost } from '../../actions/postAction';\r\n\r\nconst EditPost = (props) => {\r\n  const { match, history } = props;\r\n  const { postDetails, loading } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetails(match.params.id));\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <LoadingScreen loadingMsg='Loading page, please wait...' />\r\n  ) : (\r\n    <Main>\r\n      {postDetails && (\r\n        <React.Fragment>\r\n          <AlertDismissable />\r\n          <h1>\r\n            <Button\r\n              className='mr-3'\r\n              style={{ marginTop: -6 }}\r\n              href={`/post/${match.params.id}`}\r\n              variant='outline-primary'\r\n            >\r\n              <i className='fa fa-chevron-left fa-fw' /> Back\r\n            </Button>\r\n            Edit Post\r\n          </h1>\r\n          <EditPostForm postDetails={postDetails} history={history} />\r\n        </React.Fragment>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nconst EditPostForm = (props) => {\r\n  const { postDetails, history } = props;\r\n  const [title, handleTitle] = useState('');\r\n  const [content, handleContent] = useState((content, editor) => content);\r\n\r\n  useEffect(() => {\r\n    handleTitle(postDetails ? postDetails.title : '');\r\n    handleContent(postDetails ? postDetails.content : '');\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const thumbnail = document\r\n      .querySelector('#preview img')\r\n      .getAttribute('src');\r\n    const postData = {\r\n      title,\r\n      content,\r\n      thumbnail,\r\n    };\r\n\r\n    dispatch(updatePost(postDetails._id, postData, history));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={(e) => handleSubmit(e)}>\r\n      <Button\r\n        size='lg'\r\n        type='submit'\r\n        variant='primary'\r\n        className='float-right publish-post-btn'\r\n      >\r\n        Save Changes\r\n      </Button>\r\n      <Form.Group className='mt-5'>\r\n        <Form.Control\r\n          className='post-title-textarea'\r\n          name='title'\r\n          as='textarea'\r\n          placeholder='Title'\r\n          value={title}\r\n          onChange={(e) => handleTitle(e.target.value)}\r\n          required={true}\r\n        />\r\n      </Form.Group>\r\n      <Editor\r\n        apiKey='d01fggzhnl8ykqa0mv3t83mdkkw8f4j5aj305lr5it0pvjck'\r\n        initialValue={content}\r\n        init={{\r\n          placeholder: 'What do you have in mind?',\r\n          selector: 'textarea',\r\n          resize: false,\r\n          height: 500,\r\n          menubar: false,\r\n          toolbar_mode: 'floating',\r\n          toolbar_location: 'bottom',\r\n          skin: 'outside',\r\n          plugins: [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount',\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic backcolor | link image | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n        }}\r\n        onEditorChange={(e) => handleContent(e)}\r\n      />\r\n      <div\r\n        style={{ display: 'none' }}\r\n        id='preview'\r\n        dangerouslySetInnerHTML={{ __html: content }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingForm\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\routes\\PublicRoute.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\LoadingComponent\\index.js",[],"C:\\Users\\Lhester John Monroyo\\Desktop\\For Learning\\Devly\\client\\src\\components\\EmptyComponent\\index.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":16,"column":6,"nodeType":"256","endLine":16,"endColumn":8,"suggestions":"257"},{"ruleId":"254","severity":1,"message":"255","line":12,"column":6,"nodeType":"256","endLine":12,"endColumn":8,"suggestions":"258"},{"ruleId":"254","severity":1,"message":"255","line":28,"column":6,"nodeType":"256","endLine":28,"endColumn":8,"suggestions":"259"},{"ruleId":"254","severity":1,"message":"255","line":32,"column":6,"nodeType":"256","endLine":32,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":8,"nodeType":"263","messageId":"264","endLine":1,"endColumn":9},{"ruleId":"265","severity":1,"message":"266","line":19,"column":1,"nodeType":"267","endLine":67,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":21,"column":6,"nodeType":"256","endLine":21,"endColumn":8,"suggestions":"268"},{"ruleId":"254","severity":1,"message":"255","line":22,"column":6,"nodeType":"256","endLine":22,"endColumn":8,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":82,"column":15,"nodeType":"272","messageId":"273","endLine":84,"endColumn":67},{"ruleId":"265","severity":1,"message":"266","line":22,"column":1,"nodeType":"267","endLine":80,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":17,"column":6,"nodeType":"256","endLine":17,"endColumn":8,"suggestions":"274"},{"ruleId":"261","severity":1,"message":"275","line":6,"column":3,"nodeType":"263","messageId":"264","endLine":6,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":26,"column":6,"nodeType":"256","endLine":26,"endColumn":8,"suggestions":"276"},{"ruleId":"254","severity":1,"message":"277","line":61,"column":6,"nodeType":"256","endLine":61,"endColumn":8,"suggestions":"278"},{"ruleId":"265","severity":1,"message":"266","line":20,"column":1,"nodeType":"267","endLine":78,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":18,"column":6,"nodeType":"256","endLine":18,"endColumn":8,"suggestions":"279"},{"ruleId":"265","severity":1,"message":"266","line":14,"column":1,"nodeType":"267","endLine":41,"endColumn":2},{"ruleId":"254","severity":1,"message":"280","line":25,"column":6,"nodeType":"256","endLine":25,"endColumn":8,"suggestions":"281"},{"ruleId":"261","severity":1,"message":"282","line":4,"column":23,"nodeType":"263","messageId":"264","endLine":4,"endColumn":34},{"ruleId":"254","severity":1,"message":"283","line":22,"column":6,"nodeType":"256","endLine":22,"endColumn":8,"suggestions":"284"},{"ruleId":"261","severity":1,"message":"285","line":24,"column":9,"nodeType":"263","messageId":"264","endLine":24,"endColumn":19},{"ruleId":"254","severity":1,"message":"286","line":46,"column":6,"nodeType":"256","endLine":46,"endColumn":8,"suggestions":"287"},{"ruleId":"254","severity":1,"message":"283","line":19,"column":6,"nodeType":"256","endLine":19,"endColumn":8,"suggestions":"288"},{"ruleId":"254","severity":1,"message":"289","line":17,"column":6,"nodeType":"256","endLine":17,"endColumn":8,"suggestions":"290"},{"ruleId":"254","severity":1,"message":"280","line":19,"column":6,"nodeType":"256","endLine":19,"endColumn":8,"suggestions":"291"},{"ruleId":"254","severity":1,"message":"292","line":54,"column":6,"nodeType":"256","endLine":54,"endColumn":8,"suggestions":"293"},{"ruleId":"270","severity":1,"message":"271","line":112,"column":13,"nodeType":"272","messageId":"273","endLine":114,"endColumn":67},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["296"],["297"],["298"],["299"],"no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["300"],["301"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["302"],"'CardGroup' is defined but never used.",["303"],"React Hook useEffect has a missing dependency: 'profileDetails'. Either include it or remove the dependency array.",["304"],["305"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.id'. Either include them or remove the dependency array.",["306"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'likes' and 'userDetails._id'. Either include them or remove the dependency array.",["307"],"'handleLike' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comments' and 'userDetails._id'. Either include them or remove the dependency array.",["308"],["309"],"React Hook useEffect has missing dependencies: '_id' and 'dispatch'. Either include them or remove the dependency array.",["310"],["311"],"React Hook useEffect has a missing dependency: 'postDetails'. Either include it or remove the dependency array.",["312"],"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"313","fix":"316"},{"desc":"313","fix":"317"},{"desc":"313","fix":"318"},{"desc":"313","fix":"319"},{"desc":"313","fix":"320"},{"desc":"313","fix":"321"},{"desc":"322","fix":"323"},{"desc":"313","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"327","fix":"331"},{"desc":"332","fix":"333"},{"desc":"325","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [dispatch]",{"range":"337","text":"338"},{"range":"339","text":"338"},{"range":"340","text":"338"},{"range":"341","text":"338"},{"range":"342","text":"338"},{"range":"343","text":"338"},{"range":"344","text":"338"},{"range":"345","text":"338"},"Update the dependencies array to be: [profileDetails]",{"range":"346","text":"347"},{"range":"348","text":"338"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"349","text":"350"},"Update the dependencies array to be: [likes, userDetails._id]",{"range":"351","text":"352"},"Update the dependencies array to be: [comments, userDetails._id]",{"range":"353","text":"354"},{"range":"355","text":"352"},"Update the dependencies array to be: [_id, dispatch]",{"range":"356","text":"357"},{"range":"358","text":"350"},"Update the dependencies array to be: [postDetails]",{"range":"359","text":"360"},[448,450],"[dispatch]",[341,343],[873,875],[1033,1035],[787,789],[853,855],[630,632],[880,882],[1902,1904],"[profileDetails]",[541,543],[969,971],"[dispatch, match.params.id]",[706,708],"[likes, userDetails._id]",[1234,1236],"[comments, userDetails._id]",[624,626],[533,535],"[_id, dispatch]",[706,708],[1724,1726],"[postDetails]"]